vida_media_sup = vida_media_superior
)
datos
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi
)
datos
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = calc_fi(xi, ni)
)
datos
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = calc_fi(xi, ni),
Fi = calc_acumulada(fi)
)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = calc_fi(xi, ni),
Fi = cumsum(fi)
)
print(cumsum(calc_fi(xi, ni)))
print(cumsum(calc_fi(xi, ni)) == calc_acumulada(calc_fi(xi, ni)))
print(cumsum(calc_fi(xi, ni)))
print(length(cumsum(calc_fi(xi, ni))) == length(calc_fi(xi, ni)))
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = calc_fi(xi, ni),
Fi = cumsum(fi)
)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
xi <- calc_marcas_clase(vida_media)
# Calcula la frecuencia relativa
fi <- calc_fi(ni)
# Calcula la frecuencia relativa
fi <- calc_fi(ni)
# Calcula la frecuencia relativa
fi <- calc_fi(ni_in = ni)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
xi <- calc_marcas_clase(vida_media)
# Calcula la frecuencia relativa
fi <- calc_fi(ni_in = ni)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = fi,
Fi = cumsum(fi)
)
# Verificar la salida
print(datos)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = fi,
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
xi <- calc_marcas_clase(vida_media)
# Calcula la frecuencia relativa
fi <- calc_fi(ni_in = ni)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = fi,
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
# Verificar la salida
print(datos)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
xi <- calc_marcas_clase(vida_media)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = xi,
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
# Verificar la salida
print(datos)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
# Verificar la salida
print(datos)
datos[vida_media_inferior < ck]
datos[vida_media_inferior < 437]
datos[vida_media_inferior < 437 && 437 < vida_media_superior]
which(437 >= datos$vida_media_inf & 437 < datos$vida_media_sup)
return(resultado)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
calc_percentil_k <- function(ck, datos) {
fila <- which(c >= datos$vida_media_inf & ck < datos$vida_media_sup)
li_1 <- datos$vida_media_inf[fila]
ai <- datos$vida_media_sup[fila] - li_1
resultado <- ((ck - li_1) * (datos$ni[fila] / ai) + datos$Ni[fila-1] ) * 1/sum(datos$ni)
return(resultado)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
calc_percentil_k(437, datos)
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
calc_percentil_k <- function(ck, datos) {
fila <- which(ck >= datos$vida_media_inf & ck < datos$vida_media_sup)
li_1 <- datos$vida_media_inf[fila]
ai <- datos$vida_media_sup[fila] - li_1
resultado <- ((ck - li_1) * (datos$ni[fila] / ai) + datos$Ni[fila-1] ) * 1/sum(datos$ni)
return(resultado)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
calc_percentil_k(437, datos)
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
calc_percentil_k(437, datos)
# Funciones
# Función que calcula las frecuencias absolutas dados unos datos crudos
calc_ni <- function(datos_in, xi_in) {
ni <- sapply(xi_in, function(valor) {
sum(datos_in == valor)
})
return(ni)
}
# Función que calcula las frecuencias relativas de cada dato
calc_fi <- function(datos_in, ni_in) {
total <- sum(ni_in)
fi <- sapply(ni_in, function(valor) {
valor/total
})
return(fi)
}
# Función que calcula la frecuencia acumulada. Se puede dar la relativa o absoluta para este fin, sirve para ambas
calc_acumulada <- function(frecuencia_in) {
frec_acumulada <- c(frecuencia_in[1])
for (i in 2:length(frecuencia_in)) {
frec_acumulada <- c(frec_acumulada,
frec_acumulada[i-1] + frecuencia_in[i])
}
return(frec_acumulada)
}
# Calcula la media ponderada de unos datos dada su tabla de frecuencias
calc_media_ponderada <- function(datos) {
return(sum(datos$xi * datos$fi))
}
# Calcula el momento de orden "r" (dado) de una tabla de frecuencias
calc_momento <- function(orden, datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^orden * datos$fi[i]
})
return(sum(resultado))
}
# Calcula la desviación típica de una tabla de frecuencias
calc_sd <- function(datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^2 * datos$fi[i]
})
return(sqrt(sum(resultado)))
}
# Calcula las marcas de clase de una lista de vectores que representan los límites de los intervalos:
# list(c(inf1, max1), c(inf2, max2), ..., c(infN, maxN))
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
# Dado un valor C(k) y una tabla de frecuencias con sus intervalos inferiores y superiores en columnas distintas, te calcula el percentil en el que cae
calc_percentil_k <- function(ck, datos) {
fila <- which(ck >= datos$vida_media_inf & ck < datos$vida_media_sup)
li_1 <- datos$vida_media_inf[fila]
ai <- datos$vida_media_sup[fila] - li_1
resultado <- ((ck - li_1) * (datos$ni[fila] / ai) + datos$Ni[fila-1] ) * 1/sum(datos$ni)
return(resultado)
}
# Main
datos <- c(1,3,2,2,3,1,1,2,2,1,
1,4,3,1,3,2,3,2,2,2,
1,2,5,1,3,1,2,1,3,1,
4,1,1,3,4,2,2,1,1,4)
xi <- sort(unique(datos))
ni <- calc_ni(datos, xi)
fi <- calc_fi(datos, ni)
ni_acumulada <- calc_acumulada(ni)
fi_acumulada <- calc_acumulada(fi)
resultado <- data.frame(
xi = xi,
ni = ni,
fi = fi,
Ni = ni_acumulada,
Fi = fi_acumulada
)
print(resultado)
# Funciones
# Función que calcula las frecuencias absolutas dados unos datos crudos
calc_ni <- function(datos_in, xi_in) {
ni <- sapply(xi_in, function(valor) {
sum(datos_in == valor)
})
return(ni)
}
# Función que calcula las frecuencias relativas de cada dato
calc_fi <- function(datos_in, ni_in) {
total <- sum(ni_in)
fi <- sapply(ni_in, function(valor) {
valor/total
})
return(fi)
}
# Función que calcula la frecuencia acumulada. Se puede dar la relativa o absoluta para este fin, sirve para ambas
calc_acumulada <- function(frecuencia_in) {
frec_acumulada <- c(frecuencia_in[1])
for (i in 2:length(frecuencia_in)) {
frec_acumulada <- c(frec_acumulada,
frec_acumulada[i-1] + frecuencia_in[i])
}
return(frec_acumulada)
}
# Calcula la media ponderada de unos datos dada su tabla de frecuencias
calc_media_ponderada <- function(datos) {
return(sum(datos$xi * datos$fi))
}
# Calcula el momento de orden "r" (dado) de una tabla de frecuencias
calc_momento <- function(orden, datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^orden * datos$fi[i]
})
return(sum(resultado))
}
# Calcula la desviación típica de una tabla de frecuencias
calc_sd <- function(datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^2 * datos$fi[i]
})
return(sqrt(sum(resultado)))
}
# Calcula las marcas de clase de una lista de vectores que representan los límites de los intervalos:
# list(c(inf1, max1), c(inf2, max2), ..., c(infN, maxN))
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
# Dado un valor C(k) y una tabla de frecuencias con sus intervalos inferiores y superiores en columnas distintas, te calcula el percentil en el que cae
calc_percentil_k <- function(ck, datos) {
fila <- which(ck >= datos$vida_media_inf & ck < datos$vida_media_sup)
li_1 <- datos$vida_media_inf[fila]
ai <- datos$vida_media_sup[fila] - li_1
resultado <- ((ck - li_1) * (datos$ni[fila] / ai) + datos$Ni[fila-1] ) * 1/sum(datos$ni)
return(resultado)
}
# Replicar las marcas de clase según sus frecuencias
datos_expandidos <- rep(datos$xi, times = datos$ni)
# Crear el boxplot
boxplot(datos_expandidos, main = "Boxplot de Vida Media de Baterías")
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(fi),
Ni = calc_acumulada(ni)
)
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(frecuencia_in = fi),
Ni = calc_acumulada(frecuencia_in = ni)
)
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(frecuencia_in = fi),
Ni = calc_acumulada(frecuencia_in = ni)
)
length(vida_media_inferior)
length(vida_media_superior)
length(xi)
length(ni)
# Funciones
# Función que calcula las frecuencias absolutas dados unos datos crudos
calc_ni <- function(datos_in, xi_in) {
ni <- sapply(xi_in, function(valor) {
sum(datos_in == valor)
})
return(ni)
}
# Función que calcula las frecuencias relativas de cada dato
calc_fi <- function(datos_in, ni_in) {
total <- sum(ni_in)
fi <- sapply(ni_in, function(valor) {
valor/total
})
return(fi)
}
# Función que calcula la frecuencia acumulada. Se puede dar la relativa o absoluta para este fin, sirve para ambas
calc_acumulada <- function(frecuencia_in) {
frec_acumulada <- c(frecuencia_in[1])
for (i in 2:length(frecuencia_in)) {
frec_acumulada <- c(frec_acumulada,
frec_acumulada[i-1] + frecuencia_in[i])
}
return(frec_acumulada)
}
# Calcula la media ponderada de unos datos dada su tabla de frecuencias
calc_media_ponderada <- function(datos) {
return(sum(datos$xi * datos$fi))
}
# Calcula el momento de orden "r" (dado) de una tabla de frecuencias
calc_momento <- function(orden, datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^orden * datos$fi[i]
})
return(sum(resultado))
}
# Calcula la desviación típica de una tabla de frecuencias
calc_sd <- function(datos) {
media <- sum(datos$xi * datos$fi)
resultado <- sapply(1:length(datos$xi), function(i) {
(datos$xi[i] - media)^2 * datos$fi[i]
})
return(sqrt(sum(resultado)))
}
# Calcula las marcas de clase de una lista de vectores que representan los límites de los intervalos:
# list(c(inf1, max1), c(inf2, max2), ..., c(infN, maxN))
calc_marcas_clase <- function(intervalos){
marcas <- sapply(intervalos, function(valor) {
(valor[1] + valor[2])/2
})
return(marcas)
}
# Dado un valor C(k) y una tabla de frecuencias con sus intervalos inferiores y superiores en columnas distintas, te calcula el percentil en el que cae
calc_percentil_k <- function(ck, datos) {
fila <- which(ck >= datos$vida_media_inf & ck < datos$vida_media_sup)
li_1 <- datos$vida_media_inf[fila]
ai <- datos$vida_media_sup[fila] - li_1
resultado <- ((ck - li_1) * (datos$ni[fila] / ai) + datos$Ni[fila-1] ) * 1/sum(datos$ni)
return(resultado)
}
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(frecuencia_in = fi),
Ni = calc_acumulada(frecuencia_in = ni)
)
# Ejemplo para verificar longitudes
xi
vida_media <- list(c(100,300), c(300,400), c(400,500), c(500,600), c(600,700), c(700,900))
vida_media_inferior <- sapply(vida_media, function(x) x[1])
vida_media_superior <- sapply(vida_media, function(x) x[2])
ni <- c(54, 96, 130, 88, 85, 47)
datos <- data.frame(
vida_media_inf = vida_media_inferior,
vida_media_sup = vida_media_superior,
xi = calc_marcas_clase(vida_media),
ni = ni,
fi = calc_fi(ni_in = ni),
Fi = calc_acumulada(frecuencia_in = fi),
Ni = calc_acumulada(frecuencia_in = ni)
)
# Ejemplo para verificar longitudes
xi
